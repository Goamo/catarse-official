// draw.js
import { scene, layerObjects, currentLayerIndex, raycaster, mouse, camera } from './globals.js';
import { brushSettings, brushType } from './brushTools.js';
import { ctx } from './coreCanvas.js';

/**
 * –†–∏—Å—É–µ—Ç –ª–∏–Ω–∏—é (–∏–ª–∏ —Å—Ç–∏—Ä–∞–µ—Ç) –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç —Å–ø–∏—Å–æ–∫ –æ–±—ä–µ–∫—Ç–æ–≤ —Å–ª–æ—è.
 * @param {number} x1 - –Ω–∞—á–∞–ª—å–Ω–∞—è —Ç–æ—á–∫–∞ X
 * @param {number} y1 - –Ω–∞—á–∞–ª—å–Ω–∞—è —Ç–æ—á–∫–∞ Y
 * @param {number} x2 - –∫–æ–Ω–µ—á–Ω–∞—è —Ç–æ—á–∫–∞ X
 * @param {number} y2 - –∫–æ–Ω–µ—á–Ω–∞—è —Ç–æ—á–∫–∞ Y
 */
export function drawLine(x1, y1, x2, y2) {
  const settings = brushSettings[brushType] ?? {};

  // ‚úÖ –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º, —á—Ç–æ –º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤ —Ç–µ–∫—É—â–µ–≥–æ —Å–ª–æ—è —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
  if (!Array.isArray(layerObjects[currentLayerIndex])) {
    layerObjects[currentLayerIndex] = [];
  }

  // üßΩ –°—Ç–∏—Ä–∞—Ç–µ–ª—å
  if (brushType === "eraser") {
    raycaster.setFromCamera(mouse, camera);
    const intersects = raycaster.intersectObjects(layerObjects[currentLayerIndex]);
    intersects.forEach(({ object }) => {
      scene.remove(object);
      layerObjects[currentLayerIndex] = layerObjects[currentLayerIndex]
        .filter(o => o !== object);
    });
    return;
  }

  // ‚úèÔ∏è –†–∏—Å—É–µ–º –æ–±—ã—á–Ω—É—é –ª–∏–Ω–∏—é –Ω–∞ canvas
  ctx.globalCompositeOperation = "source-over";
  ctx.globalAlpha              = settings.opacity ?? 1.0;
  ctx.strokeStyle              = settings.color   ?? "#000000";
  ctx.lineWidth                = settings.thickness ?? 10;
  ctx.lineCap                  = "round";
  ctx.lineJoin                 = "round";

  ctx.beginPath();
  ctx.moveTo(x1, y1);
  ctx.lineTo(x2, y2);
  ctx.stroke();

  ctx.globalCompositeOperation = "source-over";
  ctx.globalAlpha              = 1.0;

  // ‚ûï –î–æ–±–∞–≤–ª—è–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç –ª–∏–Ω–∏–∏ –≤ —Å–ø–∏—Å–æ–∫ —Å–ª–æ—è
  const lineObj = {
    type: 'line',
    x1, y1, x2, y2,
    settings: { ...settings },
    constructor: { name: 'Line' } // –ù—É–∂–Ω–æ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ objectPanel
  };

  layerObjects[currentLayerIndex].push(lineObj);
}
